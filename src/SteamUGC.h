#include "SteamAPIInternal.h"

class IUGC
{
public:
    virtual void CreateQueryUserUGCRequest(unsigned int,int,int,int,unsigned int,unsigned int,unsigned int);
    virtual void CreateQueryAllUGCRequest(int,int,unsigned int,unsigned int,char const*);
    virtual void CreateQueryAllUGCRequest2(int,int,unsigned int,unsigned int,char const*);
    virtual void CreateQueryUGCDetailsRequest(unsigned long long *,unsigned int);
    virtual void SendQueryUGCRequest(unsigned long long);
    virtual void GetQueryUGCResult(unsigned long long,unsigned int,void *);
    virtual void GetQueryUGCPreviewURL(unsigned long long,unsigned int,char *,unsigned int);
    virtual void GetQueryUGCImageURL(unsigned long long,unsigned int,char *,unsigned int,unsigned int *,unsigned int *);
    virtual void GetQueryUGCMetadata(unsigned long long,unsigned int,char *,unsigned int);
    virtual void GetQueryUGCChildren(unsigned long long,unsigned int,unsigned long long *,unsigned int);
    virtual void GetQueryUGCStatistic(unsigned long long,unsigned int,int,unsigned long long *);
    virtual void GetQueryUGCNumAdditionalPreviews(unsigned long long,unsigned int);
    virtual void GetQueryUGCAdditionalPreview(unsigned long long,unsigned int,unsigned int,char *,unsigned int,char *,unsigned int,void *);
    virtual void GetQueryUGCNumKeyValueTags(unsigned long long,unsigned int);
    virtual void GetQueryUGCKeyValueTag(unsigned long long,unsigned int,unsigned int,char *,unsigned int,char *,unsigned int);
    virtual void GetQueryUGCKeyValueTag(unsigned long long,unsigned int,char const*,char *,unsigned int);
    virtual void GetQueryUGCIsDepotBuild(unsigned long long,unsigned int,bool *);
    virtual void ReleaseQueryUGCRequest(unsigned long long);
    virtual void AddRequiredTag(unsigned long long,char const*);
    virtual void AddRequiredTagGroup(unsigned long long,void const*);
    virtual void AddExcludedTag(unsigned long long,char const*);
    virtual void SetReturnOnlyIDs(unsigned long long,bool);
    virtual void SetReturnKeyValueTags(unsigned long long,bool);
    virtual void SetReturnLongDescription(unsigned long long,bool);
    virtual void SetReturnMetadata(unsigned long long,bool);
    virtual void SetReturnChildren(unsigned long long,bool);
    virtual void SetReturnAdditionalPreviews(unsigned long long,bool);
    virtual void SetReturnTotalOnly(unsigned long long,bool);
    virtual void SetReturnPlaytimeStats(unsigned long long,unsigned int);
    virtual void SetLanguage(unsigned long long,char const*);
    virtual void SetAllowCachedResponse(unsigned long long,unsigned int);
    virtual void SetCloudFileNameFilter(unsigned long long,char const*);
    virtual void SetMatchAnyTag(unsigned long long,bool);
    virtual void SetSearchText(unsigned long long,char const*);
    virtual void SetRankedByTrendDays(unsigned long long,unsigned int);
    virtual void AddRequiredKeyValueTag(unsigned long long,char const*,char const*);
    virtual void RequestUGCDetails(unsigned long long,unsigned int);
    virtual void CreateItem(unsigned int,int);
    virtual unsigned long long StartItemUpdate(unsigned int,unsigned long long);
    virtual void SetItemTitle(unsigned long long,char const*);
    virtual void SetItemDescription(unsigned long long,char const*);
    virtual void SetItemUpdateLanguage(unsigned long long,char const*);
    virtual void SetItemMetadata(unsigned long long,char const*);
    virtual void SetItemVisibility(unsigned long long,int);
    virtual void SetItemTags(unsigned long long,int const*);
    virtual void SetItemContent(unsigned long long,char const*);
    virtual void SetItemPreview(unsigned long long,char const*);
    virtual void SetAllowLegacyUpload(unsigned long long,bool);
    virtual void RemoveAllItemKeyValueTags(unsigned long long);
    virtual void RemoveItemKeyValueTags(unsigned long long,char const*);
    virtual void AddItemKeyValueTag(unsigned long long,char const*,char const*);
    virtual void AddItemPreviewFile(unsigned long long,char const*,int);
    virtual void AddItemPreviewVideo(unsigned long long,char const*);
    virtual void UpdateItemPreviewFile(unsigned long long,unsigned int,char const*);
    virtual void UpdateItemPreviewVideo(unsigned long long,unsigned int,char const*);
    virtual void RemoveItemPreview(unsigned long long,unsigned int);
    virtual unsigned long long SubmitItemUpdate(unsigned long long,char const*);
    virtual void GetItemUpdateProgress(unsigned long long,unsigned long long *,unsigned long long *);
    virtual void SetUserItemVote(unsigned long long,bool);
    virtual void GetUserItemVote(unsigned long long);
    virtual void AddItemToFavorites(unsigned int,unsigned long long);
    virtual void RemoveItemFromFavorites(unsigned int,unsigned long long);
    virtual void SubscribeItem(unsigned int,unsigned long long,bool);
    virtual void UnsubscribeItem(unsigned int,unsigned long long);
    virtual void GetNumSubscribedItems(unsigned int);
    virtual void GetSubscribedItems(unsigned int,unsigned long long *,unsigned int);
    virtual void GetItemState(unsigned int,unsigned long long);
    virtual void GetItemInstallInfo(unsigned int,unsigned long long,unsigned long long *,char *,unsigned int,unsigned int *);
    virtual void GetItemDownloadInfo(unsigned int,unsigned long long,unsigned long long *,unsigned long long *);
    virtual void DownloadItem(unsigned int,unsigned long long,bool);
    virtual void GetAppItemsStatus(unsigned int,bool *,bool *);
    virtual void BInitWorkshopForGameServer(unsigned int,unsigned int,char const*);
    virtual void SuspendDownloads(unsigned int,bool);
    virtual void GetAllItemsSizeOnDisk(unsigned int);
    virtual void StartPlaytimeTracking(unsigned int,unsigned long long *,unsigned int);
    virtual void StopPlaytimeTracking(unsigned int,unsigned long long *,unsigned int);
    virtual void StopPlaytimeTrackingForAllItems(unsigned int);
    virtual void AddDependency(unsigned long long,unsigned long long);
    virtual void RemoveDependency(unsigned long long,unsigned long long);
    virtual void AddAppDependency(unsigned long long,unsigned int);
    virtual void RemoveAppDependency(unsigned long long,unsigned int);
    virtual void GetAppDependencies(unsigned long long);
    virtual void DeleteItem(unsigned long long);
    virtual bool ShowWorkshopEULA();
    virtual void GetWorkshopEULAStatus();
};

struct SubmitItemUpdateResult_t
{
    enum { k_iCallback = k_iSteamUGCCallbacks + 4 };
    int m_eResult;
    bool m_bUserNeedsToAcceptWorkshopLegalAgreement;
    unsigned long long m_nPublishedFileId;
};
